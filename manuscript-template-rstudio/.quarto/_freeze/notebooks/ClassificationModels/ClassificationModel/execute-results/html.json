{
  "hash": "b356b24635092e95e9c811d91c34c73f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Classification of Antarctic Penguins\"\nauthor: \"Julia Silge\"\ndate: \"2020-07-28\"\nformat: html\n---\n\n\n\n# Introduction\n\nThis document explores the classification of Antarctic penguins based on morphological characteristics using logistic regression and random forest models. The dataset used is the Palmer Penguins dataset.\n\n# Load Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(palmerpenguins)\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n✔ broom        1.0.7     ✔ rsample      1.2.1\n✔ dials        1.4.0     ✔ tune         1.3.0\n✔ infer        1.0.7     ✔ workflows    1.2.0\n✔ modeldata    1.4.0     ✔ workflowsets 1.1.0\n✔ parsnip      1.3.1     ✔ yardstick    1.3.2\n✔ recipes      1.2.0     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n```\n\n\n:::\n:::\n\n\n\n# Prepare Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npenguins_df <- penguins %>%\n  filter(!is.na(sex)) %>%\n  select(-island)\n\nset.seed(123)\npenguin_split <- initial_split(penguins_df, strata = sex)\npenguin_train <- training(penguin_split)\npenguin_test <- testing(penguin_split)\n\nset.seed(123)\npenguin_boot <- bootstraps(penguin_train)\npenguin_boot\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Bootstrap sampling \n# A tibble: 25 × 2\n   splits           id         \n   <list>           <chr>      \n 1 <split [249/93]> Bootstrap01\n 2 <split [249/91]> Bootstrap02\n 3 <split [249/90]> Bootstrap03\n 4 <split [249/91]> Bootstrap04\n 5 <split [249/85]> Bootstrap05\n 6 <split [249/87]> Bootstrap06\n 7 <split [249/94]> Bootstrap07\n 8 <split [249/88]> Bootstrap08\n 9 <split [249/95]> Bootstrap09\n10 <split [249/89]> Bootstrap10\n# ℹ 15 more rows\n```\n\n\n:::\n:::\n\n\n\n# Model Specifications\n\n## Logistic Regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglm_spec <- logistic_reg() %>%\n  set_engine(\"glm\")\nglm_spec\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLogistic Regression Model Specification (classification)\n\nComputational engine: glm \n```\n\n\n:::\n:::\n\n\n\n## Random Forest\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrf_spec <- rand_forest() %>%\n  set_mode(\"classification\") %>%\n  set_engine(\"ranger\")\nrf_spec\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRandom Forest Model Specification (classification)\n\nComputational engine: ranger \n```\n\n\n:::\n:::\n\n\n\n# Workflow\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npenguin_wf <- workflow() %>%\n  add_formula(sex ~ .)\npenguin_wf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Formula\nModel: None\n\n── Preprocessor ────────────────────────────────────────────────────────────────\nsex ~ .\n```\n\n\n:::\n:::\n\n\n\n# Fit Models\n\n## Logistic Regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nglm_rs <- penguin_wf %>%\n  add_model(glm_spec) %>%\n  fit_resamples(\n    resamples = penguin_boot,\n    control = control_resamples(save_pred = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n→ A | warning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThere were issues with some computations   A: x1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThere were issues with some computations   A: x3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglm_rs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Resampling results\n# Bootstrap sampling \n# A tibble: 25 × 5\n   splits           id          .metrics         .notes           .predictions\n   <list>           <chr>       <list>           <list>           <list>      \n 1 <split [249/93]> Bootstrap01 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 2 <split [249/91]> Bootstrap02 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 3 <split [249/90]> Bootstrap03 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 4 <split [249/91]> Bootstrap04 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 5 <split [249/85]> Bootstrap05 <tibble [3 × 4]> <tibble [1 × 3]> <tibble>    \n 6 <split [249/87]> Bootstrap06 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 7 <split [249/94]> Bootstrap07 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 8 <split [249/88]> Bootstrap08 <tibble [3 × 4]> <tibble [1 × 3]> <tibble>    \n 9 <split [249/95]> Bootstrap09 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n10 <split [249/89]> Bootstrap10 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n# ℹ 15 more rows\n\nThere were issues with some computations:\n\n  - Warning(s) x3: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\nRun `show_notes(.Last.tune.result)` for more information.\n```\n\n\n:::\n:::\n\n\n\n## Random Forest\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrf_rs <- penguin_wf %>%\n  add_model(rf_spec) %>%\n  fit_resamples(\n    resamples = penguin_boot,\n    control = control_resamples(save_pred = TRUE)\n  )\nrf_rs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Resampling results\n# Bootstrap sampling \n# A tibble: 25 × 5\n   splits           id          .metrics         .notes           .predictions\n   <list>           <chr>       <list>           <list>           <list>      \n 1 <split [249/93]> Bootstrap01 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 2 <split [249/91]> Bootstrap02 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 3 <split [249/90]> Bootstrap03 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 4 <split [249/91]> Bootstrap04 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 5 <split [249/85]> Bootstrap05 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 6 <split [249/87]> Bootstrap06 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 7 <split [249/94]> Bootstrap07 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 8 <split [249/88]> Bootstrap08 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n 9 <split [249/95]> Bootstrap09 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n10 <split [249/89]> Bootstrap10 <tibble [3 × 4]> <tibble [0 × 3]> <tibble>    \n# ℹ 15 more rows\n```\n\n\n:::\n:::\n\n\n\n# Evaluate Models\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncollect_metrics(rf_rs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  .metric     .estimator   mean     n std_err .config             \n  <chr>       <chr>       <dbl> <int>   <dbl> <chr>               \n1 accuracy    binary     0.912     25 0.00547 Preprocessor1_Model1\n2 brier_class binary     0.0664    25 0.00240 Preprocessor1_Model1\n3 roc_auc     binary     0.977     25 0.00202 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncollect_metrics(glm_rs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 6\n  .metric     .estimator   mean     n std_err .config             \n  <chr>       <chr>       <dbl> <int>   <dbl> <chr>               \n1 accuracy    binary     0.918     25 0.00639 Preprocessor1_Model1\n2 brier_class binary     0.0585    25 0.00424 Preprocessor1_Model1\n3 roc_auc     binary     0.979     25 0.00254 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglm_rs %>%\n  conf_mat_resampled()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  Prediction Truth   Freq\n  <fct>      <fct>  <dbl>\n1 female     female  41.1\n2 female     male     3  \n3 male       female   4.4\n4 male       male    42.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nglm_rs %>%\n  collect_predictions() %>%\n  group_by(id) %>%\n  roc_curve(sex, .pred_female) %>%\n  ggplot(aes(1 - specificity, sensitivity, color = id)) +\n  geom_abline(lty = 2, color = \"gray80\", size = 1.5) +\n  geom_path(show.legend = FALSE, alpha = 0.6, size = 1.2) +\n  coord_equal()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ClassificationModel_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Final Fit and Interpretation\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npenguin_final <- penguin_wf %>%\n  add_model(glm_spec) %>%\n  last_fit(penguin_split)\n\ncollect_metrics(penguin_final)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  .metric     .estimator .estimate .config             \n  <chr>       <chr>          <dbl> <chr>               \n1 accuracy    binary         0.857 Preprocessor1_Model1\n2 roc_auc     binary         0.938 Preprocessor1_Model1\n3 brier_class binary         0.101 Preprocessor1_Model1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncollect_predictions(penguin_final) %>%\n  conf_mat(sex, .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          Truth\nPrediction female male\n    female     37    7\n    male        5   35\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npenguin_final$.workflow[[1]] %>%\n  tidy(exponentiate = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 5\n  term              estimate std.error statistic     p.value\n  <chr>                <dbl>     <dbl>     <dbl>       <dbl>\n1 (Intercept)       5.75e-46  19.6        -5.31  0.000000110\n2 speciesChinstrap  1.37e- 4   2.34       -3.79  0.000148   \n3 speciesGentoo     1.14e- 5   3.75       -3.03  0.00243    \n4 bill_length_mm    1.91e+ 0   0.180       3.60  0.000321   \n5 bill_depth_mm     8.36e+ 0   0.478       4.45  0.00000868 \n6 flipper_length_mm 1.06e+ 0   0.0611      0.926 0.355      \n7 body_mass_g       1.01e+ 0   0.00176     4.59  0.00000442 \n```\n\n\n:::\n:::\n\n\n\n# Data Visualization\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npenguins %>%\n  filter(!is.na(sex)) %>%\n  ggplot(aes(bill_depth_mm, bill_length_mm, color = sex, size = body_mass_g)) +\n  geom_point(alpha = 0.5) +\n  facet_wrap(~species)\n```\n\n::: {.cell-output-display}\n![](ClassificationModel_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ClassificationModel_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}